{% block default_label_attr %}
	col-form-label col-3 
{% endblock default_label_attr %}

{% block default_row_attr %}
	form-group row 
{% endblock default_row_attr %}

{% block default_widget_attr %}
	col-8 mt-2 
{% endblock default_widget_attr %}

{% block default_multiple_attr %}
	col-3 mt-2 
{% endblock default_multiple_attr %}

{# Widgets #}

{#
{% block collection_widget %}
	{% if prototype is defined and not prototype.rendered %}
		{% set attr = attr|merge({'data-prototype': form_row(prototype) }) %}
	{% endif %}
	{{ block('form_widget') }}
{% endblock collection_widget %}


{% block form_widget %}
	{% if compound %}
		{{ block('form_widget_compound') }}
	{% else %}
		{{ block('form_widget_simple') }}
	{% endif %}
{% endblock form_widget %}


{% block form_widget_compound %}
	<div {{ block('widget_container_attributes') }}>
		{% if form is rootform %}
			{{ form_errors(form) }}
		{% endif %}
		{{ block('form_rows') }}
		{{ form_rest(form) }}
	</div>
{% endblock form_widget_compound %}
#}

{% block form_widget_simple %}
	{% if type is not defined or type != 'hidden' %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ (type|default('') == 'file' ? ' custom-file-input' : ' form-control'))|trim}) %}
	{% endif %}
	{% if type is defined and (type == 'range' or type == 'color') %}
		{# Attribute "required" is not supported #}
		{% set required = false %}
	{% endif %}
	{% set type = type|default('text') %}
	{% if type == 'range' or type == 'color' %}
		{# Attribute "required" is not supported #}
		{% set required = false %}
	{% endif %}
	<input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
{% endblock form_widget_simple %}

{% block number_widget %}
	{# type="number" doesn't work with floats in localized formats #}
	{% set type = type|default('text') %}
	{% set attr = attr|merge({style: (attr.style|default('') ~ ' max-width:20rem')|trim}) %}
	{{ block('form_widget_simple') }}
{% endblock number_widget %}

{% block integer_widget %}
	{% set type = type|default('number') %}
	{% set attr = attr|merge({style: (attr.style|default('') ~ ' max-width:20rem')|trim}) %}
	{{ block('form_widget_simple') }}
{% endblock integer_widget %}

{% block url_widget %}
	{% set type = type|default('url') %}
	{{ block('form_widget_simple') }}
{% endblock url_widget %}

{% block textarea_widget %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
	<textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
{% endblock textarea_widget %}

{% block choice_widget %}
	{% if expanded %}
		{{ block('choice_widget_expanded') }}
	{% else %}
		{{ block('choice_widget_collapsed') }}
	{% endif %}
{% endblock choice_widget %}

{% block choice_widget_expanded %}
	<div {{ block('widget_container_attributes') }}>
		{% for child in form %}
			{{ form_widget(child, {
				parent_label_class: label_attr.class|default(''),
				translation_domain: choice_translation_domain,
				valid: valid,
			}) }}
		{% endfor %}
	</div>
{% endblock choice_widget_expanded %}

{% block choice_widget_collapsed %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
	{% if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) %}
		{% set required = false %}
	{% endif %}
	<select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
		{% if placeholder is not none %}
			<option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
		{% endif %}
		{% if preferred_choices|length > 0 %}
			{% set options = preferred_choices %}
			{% set render_preferred_choices = true %}
			{{ block('choice_widget_options') }}
			{% if choices|length > 0 and separator is not none %}
				<option disabled="disabled">{{ separator }}</option>
			{% endif %}
		{% endif %}
		{% set options = choices %}
		{% set render_preferred_choices = false %}
		{{ block('choice_widget_options') }}
	</select>
{% endblock choice_widget_collapsed %}

{% block choice_widget_options %}
	{% for group_label, choice in options %}
		{% if choice is iterable %}
			<optgroup label="{{ choice_translation_domain is same as(false) ? group_label : group_label|trans({}, choice_translation_domain) }}">
				{% set options = choice %}
				{{ block('choice_widget_options') }}
			</optgroup>
		{% else %}
			<option value="{{ choice.value }}"{% if choice.attr %}{% with { attr: choice.attr } %}{{ block('attributes') }}{% endwith %}{% endif %}{% if not render_preferred_choices|default(false) and choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}</option>
		{% endif %}
	{% endfor %}
{% endblock choice_widget_options %}

{% block checkbox_widget %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control custom-checkbox')|trim}) %}
	<div class="{{ attr.class }}">
		{% set attr = attr|filter((v, k) => k != 'class') %}
		<input id="{{ id }}" type="checkbox" class="custom-control-input mt-2" {{ block('widget_attributes') }}{% if required  %} data-required="true"{% endif %}{% if checked %} checked="checked"{% endif %}{% if value is defined %} value="{{ value }}"{% endif %} />
		<label class="custom-control-label mt-2" for="{{ id }}">{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</label>
	</div>
{% endblock checkbox_widget %}

{% block radio_widget %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control custom-radio')|trim}) %}
	<div class="{{ attr.class }}">
		{% set attr = attr|filter((v, k) => k != 'class') %}
		<input id="{{ id }}" type="radio" class="custom-control-input mt-2" {{ block('widget_attributes') }}{% if required  %} data-required="true"{% endif %}{% if checked %} checked="checked"{% endif %}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
		<label class="custom-control-label mt-2" for="{{ id }}">{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</label>
	</div>
{% endblock radio_widget %}

{% block date_widget %}
	{#
	{% if app.request.locale is defined %}
		{% set attr = attr|merge({'data-locale':app.request.locale}) %}
	{% endif %}
	#}
	{% if widget != 'single_text' and not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) %}
		{% set valid = true %}
	{% endif %}
	{% if widget == 'single_text' %}
		{% set attr = attr|merge({class: 'datepicker'}) %}
		{{ block('form_widget_simple') }}
	{% else %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) %}
		{% if datetime is not defined or not datetime %}
			<div {{ block('widget_container_attributes') }}>
		{% endif %}
		{% if label is not same as(false) %}
			<div class="sr-only">
				{{ form_label(form.year) }}
				{{ form_label(form.month) }}
				{{ form_label(form.day) }}
			</div>
		{% endif %}

			{{ date_pattern|replace({
				'{{ year }}': form_widget(form.year),
				'{{ month }}': form_widget(form.month),
				'{{ day }}': form_widget(form.day),
			})|raw }}
		{% if datetime is not defined or not datetime %}
			</div>
		{% endif %}
	{% endif %}
{% endblock date_widget %}

{% block file_widget %}
	<{{ element|default('div') }} class="custom-file">
		{% set type = type|default('file') %}
		{{ block('form_widget_simple') }}
		{% set label_attr = label_attr|merge({ class: (label_attr.class|default('') ~ ' custom-file-label')|trim }) %}
		<label for="{{ form.vars.id }}" {% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
			{% if attr.placeholder is defined and attr.placeholder is not none %}
				{{ translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans({}, translation_domain) }}
			{% endif %}
		</label>
	</{{ element|default('div') }}>
{% endblock %}

{% block password_widget %}
	{% set type = type|default('password') %}
	{{ block('form_widget_simple') }}
{% endblock password_widget %}

{% block hidden_widget %}
	{% set type = type|default('hidden') %}
	{{ block('form_widget_simple') }}
{% endblock hidden_widget %}

{% block email_widget %}
	{% set type = type|default('email') %}
	{{ block('form_widget_simple') }}
{% endblock email_widget %}

{% block button_widget %}
	{% set attr = attr|merge({class: (attr.class|default('btn-secondary') ~ ' btn')|trim}) %}
	{% if label is empty %}
		{% if label_format is not empty %}
			{% set label = label_format|replace({
				'%name%': name,
				'%id%': id,
			}) %}
		{% elseif label is not same as(false) %}
			{% set label = name|humanize %}
		{% endif %}
	{% endif %}
	<button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ translation_domain is same as(false) or label is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) }}</button>
{% endblock button_widget %}

{#
{% block time_widget %}
	{% if widget != 'single_text' and not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) %}
		{% set valid = true %}
	{% endif %}
	{% if widget == 'single_text' %}
		{{ block('form_widget_simple') }}
	{% else %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) %}
		{% if datetime is not defined or false == datetime %}
			<div {{ block('widget_container_attributes') }}>
		{% endif %}
		{% if label is not same as(false) %}<div class="sr-only">{{ form_label(form.hour) }}</div>{% endif %}
		{{ form_widget(form.hour) }}
		{% if with_minutes %}:{% if label is not same as(false) %}<div class="sr-only">{{ form_label(form.minute) }}</div>{% endif %}{{ form_widget(form.minute) }}{% endif %}
		{% if with_seconds %}:{% if label is not same as(false) %}<div class="sr-only">{{ form_label(form.second) }}</div>{% endif %}{{ form_widget(form.second) }}{% endif %}
		{% if datetime is not defined or false == datetime %}
			</div>
		{% endif %}
	{% endif %}
{% endblock time_widget %}

{% block datetime_widget %}
	{% if widget != 'single_text' and not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) %}
		{% set valid = true %}
	{% endif %}
	{% if widget == 'single_text' %}
		{{ block('form_widget_simple') }}
	{% else %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) %}
		<div {{ block('widget_container_attributes') }}>
			{{ form_errors(form.date) }}
			{{ form_errors(form.time) }}

			<div class="sr-only">
				{% if form.date.year is defined %}{{ form_label(form.date.year) }}{% endif %}
				{% if form.date.month is defined %}{{ form_label(form.date.month) }}{% endif %}
				{% if form.date.day is defined %}{{ form_label(form.date.day) }}{% endif %}
				{% if form.time.hour is defined %}{{ form_label(form.time.hour) }}{% endif %}
				{% if form.time.minute is defined %}{{ form_label(form.time.minute) }}{% endif %}
				{% if form.time.second is defined %}{{ form_label(form.time.second) }}{% endif %}
			</div>

			{{ form_widget(form.date, { datetime: true } ) }}
			{{ form_widget(form.time, { datetime: true } ) }}
		</div>
	{% endif %}
{% endblock datetime_widget %}

{% block dateinterval_widget %}
	{% if widget != 'single_text' and not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control is-invalid')|trim}) %}
		{% set valid = true %}
	{% endif %}
	{% if widget == 'single_text' %}
		{{ block('form_widget_simple') }}
	{% else %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) %}
		<div {{ block('widget_container_attributes') }}>
			{% if with_years %}
			<div class="col-auto">
				{{ form_label(form.years) }}
				{{ form_widget(form.years) }}
			</div>
			{% endif %}
			{% if with_months %}
			<div class="col-auto">
				{{ form_label(form.months) }}
				{{ form_widget(form.months) }}
			</div>
			{% endif %}
			{% if with_weeks %}
			<div class="col-auto">
				{{ form_label(form.weeks) }}
				{{ form_widget(form.weeks) }}
			</div>
			{% endif %}
			{% if with_days %}
			<div class="col-auto">
				{{ form_label(form.days) }}
				{{ form_widget(form.days) }}
			</div>
			{% endif %}
			{% if with_hours %}
			<div class="col-auto">
				{{ form_label(form.hours) }}
				{{ form_widget(form.hours) }}
			</div>
			{% endif %}
			{% if with_minutes %}
			<div class="col-auto">
				{{ form_label(form.minutes) }}
				{{ form_widget(form.minutes) }}
			</div>
			{% endif %}
			{% if with_seconds %}
			<div class="col-auto">
				{{ form_label(form.seconds) }}
				{{ form_widget(form.seconds) }}
			</div>
			{% endif %}
			{% if with_invert %}{{ form_widget(form.invert) }}{% endif %}
		</div>
	{% endif %}
{% endblock dateinterval_widget %}

{% block money_widget %}
	{% set prepend = not (money_pattern starts with '{{') %}
	{% set append = not (money_pattern ends with '}}') %}
	{% if prepend or append %}
		<div class="input-group{{ group_class|default('') }}">
			{% if prepend %}
				<div class="input-group-prepend">
					<span class="input-group-text">{{ money_pattern|form_encode_currency }}</span>
				</div>
			{% endif %}
			{{ block('form_widget_simple') }}
			{% if append %}
				<div class="input-group-append">
					<span class="input-group-text">{{ money_pattern|form_encode_currency }}</span>
				</div>
			{% endif %}
		</div>
	{% else %}
		{{ block('form_widget_simple') }}
	{% endif %}
{% endblock money_widget %}
#}

{#
{% block search_widget %}
	{% set type = type|default('search') %}
	{{ block('form_widget_simple') }}
{% endblock search_widget %}

{% block percent_widget %}
	{% if symbol %}
		<div class="input-group">
			{{ block('form_widget_simple') }}
			<div class="input-group-append">
				<span class="input-group-text">{{ symbol|default('%') }}</span>
			</div>
		</div>
	{% else %}
		{{ block('form_widget_simple') }}
	{% endif %}
{% endblock percent_widget %}

{% block range_widget %}
	{% set type = type|default('range') %}
	{{ block('form_widget_simple') }}
{% endblock range_widget %}
#}


{#
{% block submit_widget %}
	{% set attr = attr|merge({class: (attr.class|default('btn-primary'))|trim}) %}
	{% set type = type|default('submit') %}
	{{ block('button_widget') }}
{% endblock submit_widget %}

{% block reset_widget %}
	{% set type = type|default('reset') %}
	{{ block('button_widget') }}
{% endblock reset_widget %}

{% block tel_widget %}
	{% set type = type|default('tel') %}
	{{ block('form_widget_simple') }}
{% endblock tel_widget %}

{% block color_widget %}
	{% set type = type|default('color') %}
	{{ block('form_widget_simple') }}
{% endblock color_widget %}

{% block week_widget %}
	{% if widget == 'single_text' %}
		{{ block('form_widget_simple') }}
	{% else %}
		{% set vars = widget == 'text' ? { 'attr': { 'size': 1 }} : {} %}
		<div {{ block('widget_container_attributes') }}>
			{{ form_widget(form.year, vars) }}-{{ form_widget(form.week, vars) }}
		</div>
	{% endif %}
{% endblock week_widget %}
#}

{# Labels #}

{% block form_label_class %}
	col-3
{% endblock form_label_class %}

{% block form_label %}
	{% if label is same as(false) %}
		<div class="{{ label_attr }}"></div>
	{% else %}
		{% if expanded is not defined or not expanded %}
			{% set label_attr = label_attr|merge({class: (label_attr.class|default(''))|trim}) %}
		{% endif %}
		{% set label_attr = label_attr|merge({class: (label_attr.class|default(block('default_label_attr')))|trim}) %}
		{% if compound is defined and compound %}
			{% set element = 'legend' %}
			{% set label_attr = label_attr|merge({class: (label_attr.class|default(''))|trim}) %}
		{% else %}
			{% set label_attr = label_attr|merge({for: id}) %}
		{% endif %}
		{% if required %}
			{% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
		{% endif %}
		{% if label is empty %}
			{% if label_format is not empty %}
				{% set label = label_format|replace({'%name%': name, '%id%': id,}) %}
			{% else %}
				{% set label = name|humanize %}
			{% endif %}
		{% endif %}
		<{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>{{ translation_domain is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) }}</{{ element|default('label') }}>
	{% endif %}
{% endblock form_label %}

{% block button_label %}{% endblock %}

{% block choice_label %}
	{# remove the checkbox-inline and radio-inline class, it's only useful for embed labels #}
	{% set label_attr = label_attr|merge({class: label_attr.class|default('')|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': '', 'switch-custom': ''})|trim}) %}
	{{ block('form_label') }}
{% endblock choice_label %}

{% block radio_label %}
	{% set label_attr = label_attr|merge({class: label_attr.class|default('')|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': '', 'switch-custom': ''})|trim}) %}
	{{ block('form_label') }}
{% endblock radio_label %}

{# Rows #}

{% block form_widget_class %}
	col-7 mt-2
{% endblock form_widget_class %}

{% block form_multiple_class %}
	col-2 mt-2
{% endblock form_multiple_class %}

{% block repeated_row %}
	{#
	No need to render the errors here, as all errors are mapped
	to the first child (see RepeatedTypeValidatorExtension).
	#}
	{{ block('form_rows') }}
{% endblock repeated_row %}

{% block form_row %}
	{% set widget_attr = {} %}
	{% if help is not empty %}
		{% set widget_attr = {attr: {'aria-describedby': id ~"_help"}} %}
	{% endif %}
	<div{% with {attr: row_attr|merge({class: (row_attr.class|default(block('default_row_attr')) ~ ((not compound or force_error|default(false)) and not valid ? ' is-invalid'))|trim})} %}{{ block('attributes') }}{% endwith %}>
		{{ form_label(form) }}
		{% if expanded is defined and expanded %}
			<fieldset class="{{ block('default_widget_attr') }}">
				{{ form_widget(form, widget_attr) }}
				{% if errors|length > 0 %}
					<div id="{{ id }}_errors" class="mb-2">
						{{ form_errors(form) }}
					</div>
				{% endif %}
				{{ form_help(form) }}
			</fieldset>
		{% else %}
			<div class="{{ block('default_widget_attr') }}">
				{{ form_widget(form, widget_attr) }}
				{% if errors|length > 0 %}
					<div id="{{ id }}_errors" class="mb-2">
						{{ form_errors(form) }}
					</div>
				{% endif %}
				{{ form_help(form) }}
			</div>
		{% endif %}
		{% if attr['data-multiple'] is defined and attr['data-multiple'] is same as (true) %}
			<fieldset class="{{ block('default_multiple_attr') }}">
				<div class="custom-control custom-radio">
					<input id="{{ id }}_multiple_0" name="{{ id }}_multiple" type="radio" class="custom-control-input" value="0">
					<label class="custom-control-label" for="{{ id }}_multiple_0">{% trans %}Set{% endtrans %}</label>
				</div>
				<div class="custom-control custom-radio">
					<input id="{{ id }}_multiple_1" name="{{ id }}_multiple" type="radio" class="custom-control-input" value="1" checked="checked">
					<label class="custom-control-label" for="{{ id }}_multiple_1">{% trans %}Various{% endtrans %}</label>
				</div>
			</fieldset>
		{% endif %}
	</div>
{% endblock form_row %}

{% block button_row %}
	<div{% with {attr: row_attr|merge({class: (row_attr.class|default('') ~ ' form-group')|trim})} %}{{ block('attributes') }}{% endwith %}>
		{{ form_widget(form) }}
	</div>
{% endblock button_row %}

{% block hidden_row %}
	{{ form_widget(form) }}
{% endblock hidden_row %}

{% block choice_row %}
	{% set force_error = true %}
	{{ block('form_row') }}
{% endblock choice_row %}

{% block checkbox_row %}
	{{ block('form_row') }}
{% endblock checkbox_row %}

{% block date_row %}
	{% set force_error = true %}
	{{ block('form_row') }}
{% endblock date_row %}

{% block time_row %}
	{% set force_error = true %}
	{{ block('form_row') }}
{% endblock time_row %}

{% block datetime_row %}
	{% set force_error = true %}
	{{ block('form_row') }}
{% endblock datetime_row %}

{#
{% block submit_row %}
	<div{% with {attr: row_attr|merge({class: (row_attr.class|default('') ~ ' form-group row')|trim})} %}{{ block('attributes') }}{% endwith %}>
		<div class="{{ block('form_label_class') }}"></div>
		<div class="{{ block('form_group_class') }}">
			{{ form_widget(form) }}
		</div>
	</div>
{% endblock submit_row %}

{% block reset_row %}
	<div{% with {attr: row_attr|merge({class: (row_attr.class|default('') ~ ' form-group row')|trim})} %}{{ block('attributes') }}{% endwith %}>
		<div class="{{ block('form_label_class') }}"></div>
		<div class="{{ block('form_group_class') }}">
			{{ form_widget(form) }}
		</div>
	</div>
{% endblock reset_row %}
#}

{# Misc #}

{% block form %}
	{{ form_start(form) }}
	{{ form_widget(form) }}
	{{ form_end(form) }}
{% endblock form %}

{% block form_start %}
	{% do form.setMethodRendered() %}
	{% set method = method|upper %}
	{% if method in ["GET", "POST"] %}
		{% set form_method = method %}
	{% else %}
		{% set form_method = "POST" %}
	{% endif %}
	{% if action == '' %}
		{% set action = app.request.uri %}
	{% endif %}
	<form id="form"{% if name != '' %} name="{{ name }}"{% endif %} method="{{ form_method|lower }}" action="{{ action }}"{{ block('attributes') }}{% if multipart %} enctype="multipart/form-data"{% endif %}>
	{% if form_method != method %}
		<input type="hidden" name="_method" value="{{ method }}" />
	{% endif %}
{% endblock form_start %}

{% block form_end %}
	{% if not render_rest is defined or render_rest %}
		{{ form_rest(form) }}
	{% endif %}
	</form>
{% endblock form_end %}

{% block form_rest %}
	{% for child in form %}
		{% if not child.rendered %}
			{{ form_row(child) }}
		{% endif %}
	{% endfor %}

	{% if not form.methodRendered and form is rootform %}
		{% do form.setMethodRendered() %}
		{% set method = method|upper %}
		{% if method in ["GET", "POST"] %}
			{% set form_method = method %}
		{% else %}
			{% set form_method = "POST" %}
		{% endif %}

		{% if form_method != method %}
			<input type="hidden" name="_method" value="{{ method }}" />
		{% endif %}
	{% endif %}
{% endblock form_rest %}

{# Support #}

{% block form_rows %}
	{% for child in form|filter(child => not child.rendered) %}
		{{ form_row(child) }}
	{% endfor %}
{% endblock form_rows %}

{% block widget_attributes %}
	{% if not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) %}
	{% endif %}
	id="{{ id }}" name="{{ full_name }}"
	{% if disabled %} disabled="disabled"{% endif %}
	{% if required %} required="required"{% endif %}
	{{ block('attributes') }}
{% endblock widget_attributes %}

{% block widget_container_attributes %}
	{% if id is not empty %}id="{{ id }}"{% endif %}
	{{ block('attributes') }}
{% endblock widget_container_attributes %}

{% block button_attributes %}
	id="{{ id }}" name="{{ full_name }}"{% if disabled %} disabled="disabled"{% endif %}
	{{ block('attributes') }}
{% endblock button_attributes %}

{% block attributes %}
	{% for attrname, attrvalue in attr %}
		{{ " " }}
		{% if attrname in ['placeholder', 'title'] %}
			{{ attrname }}="{{ translation_domain is same as(false) ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }}"
		{% elseif attrvalue is same as(true) %}
			{{ attrname }}="{{ attrname }}"
		{% elseif attrvalue is not same as(false) %}
			{{ attrname }}="{{ attrvalue }}"
		{% endif %}
	{% endfor %}
{% endblock attributes %}

{# Errors #}

{% block form_errors %}
	{% if errors|length > 0 %}
		<span class="{% if form is not rootform %}invalid-feedback{% else %}alert alert-danger{% endif %} d-block">
			{% for error in errors %}
				<span class="d-block">
					<span class="form-error-icon badge badge-danger text-uppercase">{{ 'Error'|trans({}, 'validators') }}</span> <span class="form-error-message">{{ error.message }}</span>
				</span>
			{% endfor %}
		</span>
	{% endif %}
{% endblock form_errors %}

{# Help #}

{% block form_help %}
	{% if help is not empty %}
		{% set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' form-text text-muted')|trim}) %}
		<small id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
			{% if translation_domain is same as(false) %}
				{% if help_html is same as(false) %}
					{{ help }}
				{% else %}
					{{ help|raw }}
				{% endif %}
			{% else %}
				{% if help_html is same as(false) %}
					{{ help|trans(help_translation_parameters, translation_domain) }}
				{% else %}
					{{ help|trans(help_translation_parameters, translation_domain)|raw }}
				{% endif %}
			{% endif %}
		</small>
	{% endif %}
{% endblock form_help %}

