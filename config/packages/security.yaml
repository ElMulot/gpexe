security:
    enable_authenticator_manager: true
    
    encoders:
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            form_login:
                login_path: login
                check_path: login
            entry_point: form_login
            
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: logout
        
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     home

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/login$',                                                      roles: PUBLIC_ACCESS }
        - { path: '^/logout$',                                                     roles: PUBLIC_ACCESS }
        - { path: '^/automation/cron$',                                            roles: PUBLIC_ACCESS }
        
        - { path: '^/project/\d+/alert$',                                          roles: ROLE_USER }
        - { path: '^/project/\d+$',                                                roles: ROLE_USER } #project_view
        - { path: '^/project/\d+/\d+$',                                            roles: ROLE_USER } #serie_route
        - { path: '^/project/\d+/(sdr|mdr)$',                                      roles: ROLE_USER } #serie_route_by_type
        - { path: '^/project/\d+/serie/(sdr|mdr)/?\d*',                            roles: ROLE_USER } #document, document_table
        
        - { path: '^/project/\d+/vue',                                             roles: ROLE_USER } #vue, vue_new
        - { path: '^/project/vue/\d+/',                                            roles: ROLE_USER } #vue_edit, vue_delete
        
        - { path: '^/project/serie/document/\d+/detail$',                          roles: ROLE_USER } #document_detail
        - { path: '^/project/serie/document/version/\d+/detail$',                  roles: ROLE_USER } #version_detail
        
        - { path: '^/project/serie/document/version/\d+/\d+/review',               roles: ROLE_USER } #review, review_new
        - { path: '^/project/serie/document/version/review/\d+/',                  roles: ROLE_USER } #review_edit, review_delete
        
        - { path: '^/project/program/\d+/(dashboard|preload|load)$',               roles: ROLE_USER } #program_dashboard, program_preload, program_load

        - { path: '^/project/serie/\d+/document/new$',                             roles: ROLE_EDIT_DOCUMENTS } #document_new
        - { path: '^/project/serie/document/(edit|move|delete)',                   roles: ROLE_EDIT_DOCUMENTS } #document_edit, document_move, document_delete
        - { path: '^/project/serie/document/\d+/version/new$',                     roles: ROLE_EDIT_DOCUMENTS } #version_new
        - { path: '^/project/serie/document/version/(edit|delete)',                roles: ROLE_EDIT_DOCUMENTS } #version_edit, version_delete
        - { path: '^/project/serie/document/\d+/version/\d+/\d+/quick_new',        roles: ROLE_EDIT_DOCUMENTS } #version_quick_new
        - { path: '^/project/serie/document/version/\d+/quick_edit/',              roles: ROLE_EDIT_DOCUMENTS } #version_quick_edit
        
        - { path: '^/project/',                                                    roles: ROLE_CONTROLLER }
        
        - { path: '^/company',                                                     roles: ROLE_ADMIN }
        - { path: '^/user',                                                        roles: ROLE_ADMIN }
        - { path: '^/profil',                                                      roles: ROLE_ADMIN }
        - { path: '^/log',                                                         roles: ROLE_ADMIN }

        - { path: '.',                                                             roles: ROLE_USER }
        
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: [ROLE_CONTROLLER]
        ROLE_CONTROLLER: [ROLE_EDIT_DOCUMENTS]
        ROLE_EDIT_DOCUMENTS: [ROLE_USER]